{"version":3,"file":"vanilla-calendar.js","mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAIA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;ACvKA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;ACjDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;ACxHA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAEA;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAIA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;AC1CA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;ACpCA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;ACTA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;ACtBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;ACfA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;ACTA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;AC7BA;AAEA;AAAA;AAmIA;AAtIA;AA2EA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAIA;;;;;;;;;;;;ACvIA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AACA","sources":["webpack://@uvarov.frontend/vanilla-calendar/webpack/universalModuleDefinition","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/changeMonth.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/clickCalendar.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/controlArrows.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/controlTime.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createDOM.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createDays.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createHeader.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createMonths.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createPopup.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createTime.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createWeek.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createWeekNumbers.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/createYears.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/generateDate.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/getLocale.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/getWeekNumber.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/initCalendar.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/setVariablesDates.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/transformTime12.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/transformTime24.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/methods/updateCalendar.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/scripts/vanilla-calendar.ts","webpack://@uvarov.frontend/vanilla-calendar/./src/styles/vanilla-calendar.scss?cf9d","webpack://@uvarov.frontend/vanilla-calendar/webpack/bootstrap","webpack://@uvarov.frontend/vanilla-calendar/webpack/runtime/define property getters","webpack://@uvarov.frontend/vanilla-calendar/webpack/runtime/hasOwnProperty shorthand","webpack://@uvarov.frontend/vanilla-calendar/webpack/runtime/make namespace object","webpack://@uvarov.frontend/vanilla-calendar/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","import { IVanillaCalendar } from '../types';\nimport controlArrows from './controlArrows';\nimport createDays from './createDays';\nimport createHeader from './createHeader';\n\nconst changeMonth = (self: IVanillaCalendar, route: string | undefined) => {\n\tif (self.selectedMonth === undefined || self.selectedYear === undefined) return;\n\tconst lastMonth = self.locale.months.length - 1;\n\n\tswitch (route) {\n\t\tcase 'prev':\n\t\t\tif (self.selectedMonth !== 0) {\n\t\t\t\tself.selectedMonth -= 1;\n\t\t\t} else if (self.settings.selection.year) {\n\t\t\t\tself.selectedYear -= 1;\n\t\t\t\tself.selectedMonth = lastMonth;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'next':\n\t\t\tif (self.selectedMonth !== lastMonth) {\n\t\t\t\tself.selectedMonth += 1;\n\t\t\t} else if (self.settings.selection.year) {\n\t\t\t\tself.selectedYear += 1;\n\t\t\t\tself.selectedMonth = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\t// no default\n\t}\n\n\tself.settings.selected.month = self.selectedMonth;\n\tself.settings.selected.year = self.selectedYear;\n\n\tcreateHeader(self);\n\tcontrolArrows(self);\n\tcreateDays(self);\n};\n\nexport default changeMonth;\n","import { IVanillaCalendar } from '../types';\nimport changeMonth from './changeMonth';\nimport createDays from './createDays';\nimport createMonths from './createMonths';\nimport createYears from './createYears';\nimport generateDate from './generateDate';\nimport update from './updateCalendar';\n\nconst clickCalendar = (self: IVanillaCalendar) => {\n\t(self.HTMLElement as HTMLElement).addEventListener('click', (e) => {\n\t\tconst element = e.target as HTMLElement;\n\n\t\tconst arrowEl: HTMLElement| null = element.closest('.vanilla-calendar-arrow');\n\t\tconst arrowPrevEl: HTMLElement| null = element.closest('.vanilla-calendar-arrow_prev');\n\t\tconst arrowNextEl: HTMLElement| null = element.closest('.vanilla-calendar-arrow_next');\n\t\tconst dayBtnEl: HTMLElement| null = element.closest('.vanilla-calendar-day__btn');\n\t\tconst dayBtnPrevEl: HTMLElement| null = element.closest('.vanilla-calendar-day__btn_prev');\n\t\tconst dayBtnNextEl: HTMLElement| null = element.closest('.vanilla-calendar-day__btn_next');\n\t\tconst yearHeaderEl: HTMLElement| null = element.closest('.vanilla-calendar-year');\n\t\tconst yearItemEl: HTMLElement| null = element.closest('.vanilla-calendar-years__year');\n\t\tconst monthHeaderEl: HTMLElement| null = element.closest('.vanilla-calendar-month');\n\t\tconst monthItemEl: HTMLElement| null = element.closest('.vanilla-calendar-months__month');\n\n\t\tconst clickArrowMonth = () => {\n\t\t\tif (arrowEl && self.currentType !== 'year' && self.currentType !== 'month') {\n\t\t\t\tchangeMonth(self, element.dataset.calendarArrow);\n\t\t\t}\n\t\t};\n\n\t\tconst clickDaySingle = () => {\n\t\t\tif (!self.selectedDates || !dayBtnEl || !dayBtnEl.dataset.calendarDay) return;\n\t\t\tif (dayBtnEl.classList.contains('vanilla-calendar-day__btn_selected')) {\n\t\t\t\tself.selectedDates.splice(self.selectedDates.indexOf(dayBtnEl.dataset.calendarDay), 1);\n\t\t\t} else {\n\t\t\t\tself.selectedDates = [];\n\t\t\t\tself.selectedDates.push(dayBtnEl.dataset.calendarDay);\n\t\t\t}\n\t\t};\n\n\t\tconst clickDayMultiple = () => {\n\t\t\tif (!self.selectedDates || !dayBtnEl || !dayBtnEl.dataset.calendarDay) return;\n\t\t\tif (dayBtnEl.classList.contains('vanilla-calendar-day__btn_selected')) {\n\t\t\t\tself.selectedDates.splice(self.selectedDates.indexOf(dayBtnEl.dataset.calendarDay), 1);\n\t\t\t} else {\n\t\t\t\tself.selectedDates.push(dayBtnEl.dataset.calendarDay);\n\t\t\t}\n\t\t};\n\n\t\tconst clickDayMultipleRanged = () => {\n\t\t\tif (!self.selectedDates || !dayBtnEl || !dayBtnEl.dataset.calendarDay) return;\n\t\t\tif (self.selectedDates.length > 1) self.selectedDates = [];\n\t\t\tself.selectedDates.push(dayBtnEl.dataset.calendarDay);\n\n\t\t\tif (!self.selectedDates[1]) return;\n\n\t\t\tconst startDate = new Date(Date.UTC(\n\t\t\t\tnew Date(self.selectedDates[0]).getUTCFullYear(),\n\t\t\t\tnew Date(self.selectedDates[0]).getUTCMonth(),\n\t\t\t\tnew Date(self.selectedDates[0]).getUTCDate(),\n\t\t\t));\n\n\t\t\tconst endDate = new Date(Date.UTC(\n\t\t\t\tnew Date(self.selectedDates[1]).getUTCFullYear(),\n\t\t\t\tnew Date(self.selectedDates[1]).getUTCMonth(),\n\t\t\t\tnew Date(self.selectedDates[1]).getUTCDate(),\n\t\t\t));\n\n\t\t\tconst addSelectedDate = (day: Date) => {\n\t\t\t\tif (!self.selectedDates) return;\n\t\t\t\tconst date = generateDate(day);\n\t\t\t\tif (self.settings.range.disabled && self.settings.range.disabled.includes(date)) return;\n\t\t\t\tself.selectedDates.push(date);\n\t\t\t};\n\n\t\t\tself.selectedDates = [];\n\n\t\t\tif (endDate > startDate) {\n\t\t\t\tfor (let i = startDate; i <= endDate; i.setUTCDate(i.getUTCDate() + 1)) {\n\t\t\t\t\taddSelectedDate(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = startDate; i >= endDate; i.setUTCDate(i.getUTCDate() - 1)) {\n\t\t\t\t\taddSelectedDate(i);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst clickDay = () => {\n\t\t\tif (['single', 'multiple', 'multiple-ranged'].includes(self.settings.selection.day) && dayBtnEl) {\n\t\t\t\tswitch (self.settings.selection.day) {\n\t\t\t\t\tcase 'single':\n\t\t\t\t\t\tclickDaySingle();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiple':\n\t\t\t\t\t\tclickDayMultiple();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'multiple-ranged':\n\t\t\t\t\t\tclickDayMultipleRanged();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// no default\n\t\t\t\t}\n\n\t\t\t\tif (self.actions.clickDay) self.actions.clickDay(e, self.selectedDates);\n\t\t\t\tself.settings.selected.dates = self.selectedDates;\n\n\t\t\t\tif (dayBtnPrevEl) {\n\t\t\t\t\tchangeMonth(self, 'prev');\n\t\t\t\t} else if (dayBtnNextEl) {\n\t\t\t\t\tchangeMonth(self, 'next');\n\t\t\t\t} else {\n\t\t\t\t\tcreateDays(self);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst clickYear = () => {\n\t\t\tif (!self.settings.selection.year) return;\n\t\t\tif (arrowEl && self.currentType === 'year') {\n\t\t\t\tif (self.viewYear === undefined) return;\n\t\t\t\tif (arrowNextEl) {\n\t\t\t\t\tself.viewYear += 15;\n\t\t\t\t} else if (arrowPrevEl) {\n\t\t\t\t\tself.viewYear -= 15;\n\t\t\t\t}\n\t\t\t\tcreateYears(self);\n\t\t\t} else if (self.currentType !== 'year' && yearHeaderEl) {\n\t\t\t\tcreateYears(self);\n\t\t\t} else if (self.currentType === 'year' && yearHeaderEl) {\n\t\t\t\tself.currentType = self.type;\n\t\t\t\tupdate(self);\n\t\t\t} else if (yearItemEl) {\n\t\t\t\tif (self.selectedMonth === undefined || !self.dateMin || !self.dateMax) return;\n\t\t\t\tself.selectedYear = Number(yearItemEl.dataset.calendarYear);\n\t\t\t\tself.currentType = self.type;\n\t\t\t\tif (self.selectedMonth < self.dateMin.getUTCMonth() && self.selectedYear === self.dateMin.getUTCFullYear()) {\n\t\t\t\t\tself.settings.selected.month = self.dateMin.getUTCMonth();\n\t\t\t\t}\n\t\t\t\tif (self.selectedMonth > self.dateMax.getUTCMonth() && self.selectedYear === self.dateMax.getUTCFullYear()) {\n\t\t\t\t\tself.settings.selected.month = self.dateMax.getUTCMonth();\n\t\t\t\t}\n\t\t\t\tif (self.actions.clickYear) self.actions.clickYear(e, self.selectedYear);\n\t\t\t\tself.settings.selected.year = self.selectedYear;\n\t\t\t\tupdate(self);\n\t\t\t}\n\t\t};\n\n\t\tconst clickMonth = () => {\n\t\t\tif (!self.settings.selection.month) return;\n\t\t\tif (self.currentType !== 'month' && monthHeaderEl) {\n\t\t\t\tcreateMonths(self);\n\t\t\t} else if (self.currentType === 'month' && monthHeaderEl) {\n\t\t\t\tself.currentType = self.type;\n\t\t\t\tupdate(self);\n\t\t\t} else if (monthItemEl) {\n\t\t\t\tself.selectedMonth = Number(monthItemEl.dataset.calendarMonth);\n\t\t\t\tself.currentType = self.type;\n\t\t\t\tif (self.actions.clickMonth) self.actions.clickMonth(e, self.selectedMonth);\n\t\t\t\tself.settings.selected.month = self.selectedMonth;\n\t\t\t\tupdate(self);\n\t\t\t}\n\t\t};\n\n\t\tclickArrowMonth();\n\t\tclickDay();\n\t\tclickYear();\n\t\tclickMonth();\n\t});\n};\n\nexport default clickCalendar;\n","import { IVanillaCalendar } from '../types';\n\nconst controlArrows = (self: IVanillaCalendar) => {\n\tif (!['default', 'year'].includes(self.currentType)) return;\n\n\tconst arrowPrev = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-arrow_prev');\n\tconst arrowNext = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-arrow_next');\n\n\tif (arrowPrev instanceof HTMLElement && arrowNext instanceof HTMLElement) {\n\t\tconst defaultControl = () => {\n\t\t\tif (!self.dateMin || !self.dateMax || self.currentType !== 'default') return;\n\n\t\t\tconst isSelectedMinMount = self.selectedMonth === self.dateMin.getUTCMonth();\n\t\t\tconst isSelectedMaxMount = self.selectedMonth === self.dateMax.getUTCMonth();\n\t\t\tconst isSelectedMinYear = !self.settings.selection.year ? true : self.selectedYear === self.dateMin.getUTCFullYear();\n\t\t\tconst isSelectedMaxYear = !self.settings.selection.year ? true : self.selectedYear === self.dateMax.getUTCFullYear();\n\n\t\t\tif ((isSelectedMinMount && isSelectedMinYear) || !self.settings.selection.month) {\n\t\t\t\tarrowPrev.style.visibility = 'hidden';\n\t\t\t} else {\n\t\t\t\tarrowPrev.style.visibility = '';\n\t\t\t}\n\t\t\tif ((isSelectedMaxMount && isSelectedMaxYear) || !self.settings.selection.month) {\n\t\t\t\tarrowNext.style.visibility = 'hidden';\n\t\t\t} else {\n\t\t\t\tarrowNext.style.visibility = '';\n\t\t\t}\n\t\t};\n\n\t\tconst yearControl = () => {\n\t\t\tif (!self.dateMin || !self.dateMax || self.currentType !== 'year' || self.viewYear === undefined) return;\n\n\t\t\tif (self.dateMin.getUTCFullYear() && (self.viewYear - 7) <= self.dateMin.getUTCFullYear()) {\n\t\t\t\tarrowPrev.style.visibility = 'hidden';\n\t\t\t} else {\n\t\t\t\tarrowPrev.style.visibility = '';\n\t\t\t}\n\n\t\t\tif (self.dateMax.getUTCFullYear() && (self.viewYear + 7) >= self.dateMax.getUTCFullYear()) {\n\t\t\t\tarrowNext.style.visibility = 'hidden';\n\t\t\t} else {\n\t\t\t\tarrowNext.style.visibility = '';\n\t\t\t}\n\t\t};\n\n\t\tdefaultControl();\n\t\tyearControl();\n\t}\n};\n\nexport default controlArrows;\n","import { IVanillaCalendar } from '../types';\nimport transformTime12 from './transformTime12';\nimport transformTime24 from './transformTime24';\n\nconst controlTime = (self: IVanillaCalendar, keepingTime: number | false) => {\n\tconst rangeHours = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-time__range input[name=\"hours\"]');\n\tconst rangeMinutes = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-time__range input[name=\"minutes\"]');\n\tconst inputHours = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-time__hours input[name=\"hours\"]');\n\tconst inputMinutes = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-time__minutes input[name=\"minutes\"]');\n\tconst btnKeepingTime = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-time__keeping');\n\n\tconst mouseoverRange = (range: HTMLInputElement, input: HTMLInputElement) => {\n\t\trange.addEventListener('mouseover', () => input.classList.add('is-focus'));\n\t};\n\n\tconst mouseoutRange = (range: HTMLInputElement, input: HTMLInputElement) => {\n\t\trange.addEventListener('mouseout', () => input.classList.remove('is-focus'));\n\t};\n\n\tconst setTime = (e: Event, value: string, type: string) => {\n\t\tif (type === 'hours') {\n\t\t\tself.selectedHours = `${value}`;\n\t\t} else if (type === 'minutes') {\n\t\t\tself.selectedMinutes = `${value}`;\n\t\t}\n\t\tself.selectedTime = `${self.selectedHours}:${self.selectedMinutes}${self.selectedKeeping ? ` ${self.selectedKeeping}` : ''}`;\n\t\tself.settings.selected.time = self.selectedTime;\n\n\t\tif (self.actions.changeTime) {\n\t\t\tself.actions.changeTime(e, self.selectedTime, (self.selectedHours as string), (self.selectedMinutes as string), (self.selectedKeeping as string));\n\t\t}\n\t};\n\n\tconst changeRange = (range: HTMLInputElement, input: HTMLInputElement, type: string, max: number) => {\n\t\trange.addEventListener('input', (e) => {\n\t\t\tlet value: number | string = Number((e.target as HTMLInputElement).value);\n\t\t\tvalue = value < 10 ? `0${value}` : `${value}`;\n\n\t\t\tif (type === 'hours' && max === 12) {\n\t\t\t\tif (Number((e.target as HTMLInputElement).value) < max && Number((e.target as HTMLInputElement).value) > 0) {\n\t\t\t\t\tinput.value = value;\n\t\t\t\t\tself.selectedKeeping = 'AM';\n\t\t\t\t\t(btnKeepingTime as HTMLElement).innerText = self.selectedKeeping;\n\t\t\t\t\tsetTime(e, value, type);\n\t\t\t\t} else {\n\t\t\t\t\tif (Number((e.target as HTMLInputElement).value) === 0) {\n\t\t\t\t\t\tself.selectedKeeping = 'AM';\n\t\t\t\t\t\t(btnKeepingTime as HTMLElement).innerText = 'AM';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.selectedKeeping = 'PM';\n\t\t\t\t\t\t(btnKeepingTime as HTMLElement).innerText = 'PM';\n\t\t\t\t\t}\n\t\t\t\t\tinput.value = transformTime12((e.target as HTMLInputElement).value);\n\t\t\t\t\tsetTime(e, transformTime12((e.target as HTMLInputElement).value), type);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinput.value = value;\n\t\t\t\tsetTime(e, value, type);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst changeInput = (range: HTMLInputElement, input: HTMLInputElement, type: string, max: number) => {\n\t\tinput.addEventListener('change', (e) => {\n\t\t\tconst changeInputEl: HTMLInputElement = (e.target as HTMLInputElement);\n\n\t\t\tlet value: number | string = Number(changeInputEl.value);\n\t\t\tvalue = value < 10 ? `0${value}` : `${value}`;\n\n\t\t\tif (type === 'hours' && max === 12) {\n\t\t\t\tif (changeInputEl.value && Number(changeInputEl.value) <= max && Number(changeInputEl.value) > 0) {\n\t\t\t\t\tchangeInputEl.value = value;\n\t\t\t\t\trange.value = transformTime24(value, self.selectedKeeping);\n\t\t\t\t\tsetTime(e, value, type);\n\t\t\t\t} else if (changeInputEl.value && Number(changeInputEl.value) < 24 && (Number(changeInputEl.value) > max || Number(changeInputEl.value) === 0)) {\n\t\t\t\t\tif (Number(changeInputEl.value) === 0) {\n\t\t\t\t\t\tself.selectedKeeping = 'AM';\n\t\t\t\t\t\t(btnKeepingTime as HTMLElement).innerText = 'AM';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.selectedKeeping = 'PM';\n\t\t\t\t\t\t(btnKeepingTime as HTMLElement).innerText = 'PM';\n\t\t\t\t\t}\n\t\t\t\t\tchangeInputEl.value = transformTime12(changeInputEl.value);\n\t\t\t\t\trange.value = value;\n\t\t\t\t\tsetTime(e, transformTime12(changeInputEl.value), type);\n\t\t\t\t} else {\n\t\t\t\t\tchangeInputEl.value = (self.selectedHours as string);\n\t\t\t\t}\n\t\t\t} else if (changeInputEl.value && Number(changeInputEl.value) <= max && Number(changeInputEl.value) >= 0) {\n\t\t\t\tchangeInputEl.value = value;\n\t\t\t\trange.value = value;\n\t\t\t\tsetTime(e, value, type);\n\t\t\t} else if (type === 'hours') {\n\t\t\t\tchangeInputEl.value = (self.selectedHours as string);\n\t\t\t} else if (type === 'minutes') {\n\t\t\t\tchangeInputEl.value = (self.selectedMinutes as string);\n\t\t\t}\n\t\t});\n\t};\n\n\tmouseoverRange((rangeHours as HTMLInputElement), (inputHours as HTMLInputElement));\n\tmouseoverRange((rangeMinutes as HTMLInputElement), (inputMinutes as HTMLInputElement));\n\tmouseoutRange((rangeHours as HTMLInputElement), (inputHours as HTMLInputElement));\n\tmouseoutRange((rangeMinutes as HTMLInputElement), (inputMinutes as HTMLInputElement));\n\tchangeRange((rangeHours as HTMLInputElement), (inputHours as HTMLInputElement), 'hours', keepingTime === 24 ? 23 : 12);\n\tchangeRange((rangeMinutes as HTMLInputElement), (inputMinutes as HTMLInputElement), 'minutes', 0);\n\tchangeInput((rangeHours as HTMLInputElement), (inputHours as HTMLInputElement), 'hours', keepingTime === 24 ? 23 : 12);\n\tchangeInput((rangeMinutes as HTMLInputElement), (inputMinutes as HTMLInputElement), 'minutes', 59);\n\n\tif (!btnKeepingTime) return;\n\tbtnKeepingTime.addEventListener('click', (e) => {\n\t\tif ((btnKeepingTime as HTMLElement).innerText.includes('AM')) {\n\t\t\tself.selectedKeeping = 'PM';\n\t\t} else {\n\t\t\tself.selectedKeeping = 'AM';\n\t\t}\n\t\t(rangeHours as HTMLInputElement).value = transformTime24(self.selectedHours, self.selectedKeeping);\n\t\tsetTime(e, (self.selectedHours as string), 'hours');\n\t\t(btnKeepingTime as HTMLElement).innerText = self.selectedKeeping;\n\t});\n};\n\nexport default controlTime;\n","import { IVanillaCalendar } from '../types';\n\nconst createDOM = (self: IVanillaCalendar) => {\n\tconst calendarElement = (self.HTMLElement as HTMLElement);\n\n\tif (self.currentType === 'default') {\n\t\tcalendarElement.classList.add('vanilla-calendar_default');\n\t\tcalendarElement.classList.remove('vanilla-calendar_month');\n\t\tcalendarElement.classList.remove('vanilla-calendar_year');\n\t\tcalendarElement.innerHTML = `\n\t\t<div class=\"vanilla-calendar-header\">\n\t\t\t<button type=\"button\"\n\t\t\t\tclass=\"vanilla-calendar-arrow vanilla-calendar-arrow_prev\"\n\t\t\t\tdata-calendar-arrow=\"prev\"\n\t\t\t\ttitle=\"Prev\">\n\t\t\t</button>\n\t\t\t<div class=\"vanilla-calendar-header__content\"></div>\n\t\t\t<button type=\"button\"\n\t\t\t\tclass=\"vanilla-calendar-arrow vanilla-calendar-arrow_next\"\n\t\t\t\tdata-calendar-arrow=\"next\"\n\t\t\t\ttitle=\"Next\">\n\t\t\t</button>\n\t\t</div>\n\t\t${self.settings.visibility.weekNumbers ? `\n\t\t<div class=\"vanilla-calendar-column\">\n\t\t\t<b class=\"vanilla-calendar-column__title\">#</b>\n\t\t\t<div class=\"vanilla-calendar-column__content vanilla-calendar-week-numbers\"></div>\n\t\t</div>\n\t\t` : ''}\n\t\t<div class=\"vanilla-calendar-content\">\n\t\t\t<div class=\"vanilla-calendar-week\"></div>\n\t\t\t<div class=\"vanilla-calendar-days\"></div>\n\t\t</div>\n\t\t${self.settings.selection.time ? `\n\t\t<div class=\"vanilla-calendar-time\"></div>\n\t\t` : ''}\n\t`;\n\t} else if (self.currentType === 'month') {\n\t\tcalendarElement.classList.remove('vanilla-calendar_default');\n\t\tcalendarElement.classList.add('vanilla-calendar_month');\n\t\tcalendarElement.classList.remove('vanilla-calendar_year');\n\t\tcalendarElement.innerHTML = `\n\t\t<div class=\"vanilla-calendar-header\">\n\t\t\t<div class=\"vanilla-calendar-header__content\"></div>\n\t\t</div>\n\t\t<div class=\"vanilla-calendar-content\">\n\t\t\t<div class=\"vanilla-calendar-months\"></div>\n\t\t</div>`;\n\t} else if (self.currentType === 'year') {\n\t\tcalendarElement.classList.remove('vanilla-calendar_default');\n\t\tcalendarElement.classList.remove('vanilla-calendar_month');\n\t\tcalendarElement.classList.add('vanilla-calendar_year');\n\t\tcalendarElement.innerHTML = `\n\t\t<div class=\"vanilla-calendar-header\">\n\t\t\t<button type=\"button\"\n\t\t\t\tclass=\"vanilla-calendar-arrow vanilla-calendar-arrow_prev\"\n\t\t\t\ttitle=\"prev\">\n\t\t\t</button>\n\t\t\t<div class=\"vanilla-calendar-header__content\"></div>\n\t\t\t<button type=\"button\"\n\t\t\t\tclass=\"vanilla-calendar-arrow vanilla-calendar-arrow_next\"\n\t\t\t\ttitle=\"next\">\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"vanilla-calendar-content\">\n\t\t\t<div class=\"vanilla-calendar-years\"></div>\n\t\t</div>`;\n\t}\n};\n\nexport default createDOM;\n","import { IVanillaCalendar } from '../types';\nimport createPopup from './createPopup';\nimport createWeekNumbers from './createWeekNumbers';\nimport generateDate from './generateDate';\n\nconst createDays = (self: IVanillaCalendar) => {\n\tif (self.selectedMonth === undefined || self.selectedYear === undefined) return;\n\tconst firstDay = new Date(Date.UTC(self.selectedYear, self.selectedMonth, 1));\n\tconst daysSelectedMonth = new Date(Date.UTC(self.selectedYear, self.selectedMonth + 1, 0)).getUTCDate();\n\n\tlet firstDayWeek = Number(firstDay.getUTCDay());\n\tif (self.settings.iso8601) firstDayWeek = Number((firstDay.getUTCDay() !== 0 ? firstDay.getUTCDay() : 7) - 1);\n\n\tconst daysEl = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-days');\n\tif (!daysEl) return;\n\tconst templateDayEl = document.createElement('div');\n\tconst templateDayBtnEl = document.createElement('button');\n\ttemplateDayEl.className = 'vanilla-calendar-day';\n\ttemplateDayBtnEl.className = 'vanilla-calendar-day__btn';\n\ttemplateDayBtnEl.type = 'button';\n\n\tif (['single', 'multiple', 'multiple-ranged'].includes(self.settings.selection.day)) {\n\t\tdaysEl.classList.add('vanilla-calendar-days_selecting');\n\t}\n\n\tdaysEl.innerHTML = '';\n\n\tconst setDayModifier = (dayBtnEl: HTMLElement, dayID: number, date: string, currentMonth: boolean) => {\n\t\t// if weekend\n\t\tif (self.settings.visibility.weekend && (dayID === 0 || dayID === 6)) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_weekend');\n\t\t}\n\n\t\t// if holidays\n\t\tif (Array.isArray(self.settings.selected.holidays)) {\n\t\t\tself.settings.selected.holidays.forEach((holiday) => {\n\t\t\t\tif (holiday === date) {\n\t\t\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_holiday');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// if today\n\t\tlet thisToday: string | number = self.date.today.getDate();\n\t\tlet thisMonth: string | number = self.date.today.getMonth() + 1;\n\t\tthisToday = thisToday < 10 ? `0${thisToday}` : thisToday;\n\t\tthisMonth = thisMonth < 10 ? `0${thisMonth}` : thisMonth;\n\n\t\tconst thisDay = `${self.date.today.getFullYear()}-${thisMonth}-${thisToday}`;\n\n\t\tif (self.settings.visibility.today && dayBtnEl.dataset.calendarDay === thisDay) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_today');\n\t\t}\n\n\t\t// if selected day\n\t\tif (self.selectedDates && self.selectedDates.indexOf(date) === 0) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_selected');\n\t\t} else if (self.selectedDates && self.selectedDates[0] && (self.selectedDates.indexOf(date) === self.selectedDates.length - 1)) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_selected');\n\t\t} else if (self.selectedDates && self.selectedDates.indexOf(date) > 0 && self.settings.selection.day === 'multiple-ranged') {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_selected');\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_intermediate');\n\t\t} else if (self.selectedDates && self.selectedDates.indexOf(date) > 0) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_selected');\n\t\t}\n\n\t\t// if range min/max\n\t\tif (self.settings.range.min > date || self.settings.range.max < date) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_disabled');\n\t\t\tdayBtnEl.tabIndex = -1;\n\t\t}\n\n\t\t// if disabled selected\n\t\tif (!self.settings.selection.month && !currentMonth) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_disabled');\n\t\t\tdayBtnEl.tabIndex = -1;\n\t\t}\n\t\tif (!self.settings.selection.year && new Date(date).getFullYear() !== self.selectedYear) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_disabled');\n\t\t\tdayBtnEl.tabIndex = -1;\n\t\t}\n\n\t\t// if range values\n\t\tif (Array.isArray(self.settings.range.disabled)) {\n\t\t\tself.settings.range.disabled.forEach((dateDisabled) => {\n\t\t\t\tif (dateDisabled === date) {\n\t\t\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_disabled');\n\t\t\t\t\tdayBtnEl.tabIndex = -1;\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Array.isArray(self.settings.range.enabled)) {\n\t\t\tdayBtnEl.classList.add('vanilla-calendar-day__btn_disabled');\n\t\t\tdayBtnEl.tabIndex = -1;\n\t\t\tself.settings.range.enabled.forEach((dateEnabled) => {\n\t\t\t\tif (dateEnabled === date) {\n\t\t\t\t\tdayBtnEl.classList.remove('vanilla-calendar-day__btn_disabled');\n\t\t\t\t\tdayBtnEl.tabIndex = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tconst createDay = (dayText: string, dayID: number, date: string, currentMonth: boolean, modifier: string | null) => {\n\t\tconst dayEl = templateDayEl.cloneNode(true);\n\t\tconst dayBtnEl = templateDayBtnEl.cloneNode(true);\n\t\tif (dayEl instanceof HTMLElement && dayBtnEl instanceof HTMLElement) {\n\t\t\tif (modifier) dayBtnEl.classList.add(modifier);\n\t\t\tdayBtnEl.innerText = dayText;\n\t\t\tdayBtnEl.dataset.calendarDay = date;\n\n\t\t\tsetDayModifier(dayBtnEl, dayID, date, currentMonth);\n\t\t\tdayEl.append(dayBtnEl);\n\t\t\tdaysEl.append(dayEl);\n\t\t}\n\t};\n\n\tconst prevMonth = () => {\n\t\tif (self.selectedMonth === undefined || self.selectedYear === undefined) return;\n\t\tconst prevMonthDays = new Date(Date.UTC(self.selectedYear, self.selectedMonth, 0)).getUTCDate();\n\t\tlet day = prevMonthDays - firstDayWeek;\n\t\tlet year = self.selectedYear;\n\t\tlet month: number | string = self.selectedMonth;\n\n\t\tif (self.selectedMonth === 0) {\n\t\t\tmonth = self.locale.months.length;\n\t\t\tyear = self.selectedYear - 1;\n\t\t} else if (self.selectedMonth < 10) {\n\t\t\tmonth = `0${self.selectedMonth}`;\n\t\t}\n\n\t\tfor (let i = 0; i < firstDayWeek; i++) {\n\t\t\tday += 1;\n\n\t\t\tconst date = `${year}-${month}-${day}`;\n\t\t\tconst dayIDCurrent = new Date(Date.UTC(self.selectedYear, self.selectedMonth, day - 1));\n\t\t\tconst prevMonthID = dayIDCurrent.getUTCMonth() - 1;\n\t\t\tconst dayID = new Date(Date.UTC(self.selectedYear, prevMonthID, day)).getUTCDay();\n\n\t\t\tcreateDay(String(day), dayID, date, false, 'vanilla-calendar-day__btn_prev');\n\t\t}\n\t};\n\n\tconst selectedMonth = () => {\n\t\tif (self.selectedMonth === undefined || self.selectedYear === undefined) return;\n\t\tfor (let i = 1; i <= daysSelectedMonth; i++) {\n\t\t\tconst day = new Date(Date.UTC(self.selectedYear, self.selectedMonth, i));\n\t\t\tconst date = generateDate(day);\n\t\t\tconst dayID = day.getUTCDay();\n\n\t\t\tcreateDay(String(i), dayID, date, true, null);\n\t\t}\n\t};\n\n\tconst nextMonth = () => {\n\t\tif (self.selectedMonth === undefined || self.selectedYear === undefined) return;\n\t\tconst total = firstDayWeek + daysSelectedMonth;\n\t\tconst rows = Math.ceil(total / self.locale.weekday.length);\n\t\tconst nextDays = (self.locale.weekday.length * rows) - total;\n\n\t\tlet year = self.selectedYear;\n\t\tlet month = String(self.selectedMonth + 2);\n\n\t\tif ((self.selectedMonth + 1) === self.locale.months.length) {\n\t\t\tmonth = '01';\n\t\t\tyear = self.selectedYear + 1;\n\t\t} else if ((self.selectedMonth + 2) < 10) {\n\t\t\tmonth = `0${self.selectedMonth + 2}`;\n\t\t}\n\n\t\tfor (let i = 1; i <= nextDays; i++) {\n\t\t\tconst day = i < 10 ? `0${i}` : String(i);\n\t\t\tconst date = `${year}-${month}-${day}`;\n\t\t\tconst dayIDCurrent = new Date(Date.UTC(self.selectedYear, self.selectedMonth, i));\n\t\t\tconst nextMonthID = dayIDCurrent.getUTCMonth() + 1;\n\t\t\tconst dayID = new Date(Date.UTC(self.selectedYear, nextMonthID, i)).getUTCDay();\n\n\t\t\tcreateDay(String(i), dayID, date, false, 'vanilla-calendar-day__btn_next');\n\t\t}\n\t};\n\n\tprevMonth();\n\tselectedMonth();\n\tnextMonth();\n\tcreatePopup(self, (daysEl as HTMLElement));\n\tcreateWeekNumbers(self, firstDayWeek, daysSelectedMonth);\n};\n\nexport default createDays;\n","import { IVanillaCalendar } from '../types';\n\nconst createHeader = (self: IVanillaCalendar) => {\n\tconst headerContent = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-header__content');\n\tif (self.selectedMonth === undefined || self.selectedYear === undefined || !headerContent) return;\n\n\tconst monthDisabled = !self.settings.selection.month ? ' vanilla-calendar-month_disabled' : '';\n\tconst yearDisabled = !self.settings.selection.year ? ' vanilla-calendar-year_disabled' : '';\n\tself.settings.selection.year = self.settings.selection.year;\n\tconst month = `\n\t<button type=\"button\"\n\t\ttabindex=\"${self.settings.selection.month ? 0 : -1}\"\n\t\tclass=\"vanilla-calendar-month${monthDisabled}\"\n\t\tdata-calendar-selected-month=\"${self.selectedMonth}\">\n\t\t${self.locale.months[self.selectedMonth]}\n\t</button>`.replace(/[\\n\\t]/g, '');\n\tconst year = `\n\t<button type=\"button\"\n\t\ttabindex=\"${self.settings.selection.year ? 0 : -1}\"\n\t\tclass=\"vanilla-calendar-year${yearDisabled}\"\n\t\tdata-calendar-selected-year=\"${self.selectedYear}\">\n\t\t${self.selectedYear}\n\t</button>`.replace(/[\\n\\t]/g, '');\n\n\tlet templateHeader = self.settings.visibility.templateHeader.replace('%M', month);\n\ttemplateHeader = templateHeader.replace('%Y', year);\n\n\theaderContent.innerHTML = templateHeader;\n};\n\nexport default createHeader;\n","import { IVanillaCalendar } from '../types';\nimport createDOM from './createDOM';\nimport createHeader from './createHeader';\n\nconst createMonths = (self: IVanillaCalendar) => {\n\tself.currentType = 'month';\n\tcreateDOM(self);\n\tcreateHeader(self);\n\n\tconst monthsEl = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-months');\n\tif (self.selectedMonth === undefined || self.selectedYear === undefined || !self.dateMin || !self.dateMax || !monthsEl) return;\n\n\tif (self.settings.selection.month) monthsEl.classList.add('vanilla-calendar-months_selecting');\n\n\tconst templateMonthEl = document.createElement('button');\n\ttemplateMonthEl.type = 'button';\n\ttemplateMonthEl.className = 'vanilla-calendar-months__month';\n\n\tfor (let i = 0; i < self.locale.months.length; i++) {\n\t\tconst month = self.locale.months[i];\n\t\tconst monthEl = templateMonthEl.cloneNode(true);\n\n\t\tif (monthEl instanceof HTMLElement) {\n\t\t\tif (i === self.selectedMonth) {\n\t\t\t\tmonthEl.classList.add('vanilla-calendar-months__month_selected');\n\t\t\t}\n\t\t\tif (i < self.dateMin.getUTCMonth() && self.selectedYear === self.dateMin.getUTCFullYear()) {\n\t\t\t\tmonthEl.classList.add('vanilla-calendar-months__month_disabled');\n\t\t\t\tmonthEl.tabIndex = -1;\n\t\t\t}\n\t\t\tif (i > self.dateMax.getUTCMonth() && self.selectedYear === self.dateMax.getUTCFullYear()) {\n\t\t\t\tmonthEl.classList.add('vanilla-calendar-months__month_disabled');\n\t\t\t\tmonthEl.tabIndex = -1;\n\t\t\t}\n\n\t\t\tmonthEl.dataset.calendarMonth = String(i);\n\n\t\t\tmonthEl.title = `${month}`;\n\t\t\tmonthEl.innerText = `${self.settings.visibility.monthShort ? month.substring(0, 3) : month}`;\n\t\t\tmonthsEl.append(monthEl);\n\t\t}\n\t}\n};\n\nexport default createMonths;\n","import { IVanillaCalendar } from '../types';\n\nconst createPopup = (self: IVanillaCalendar, daysEl: HTMLElement) => {\n\tif (!self.popups) return;\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tfor (const day in self.popups) {\n\t\tif (Object.hasOwnProperty.call(self.popups, day)) {\n\t\t\tconst dayBtnEl = daysEl.querySelector(`[data-calendar-day=\"${day}\"]`);\n\n\t\t\tif (dayBtnEl) {\n\t\t\t\tconst dayInfo = self.popups[day];\n\t\t\t\tdayBtnEl.classList.add(dayInfo.modifier);\n\t\t\t\t(dayBtnEl.parentNode as HTMLElement).innerHTML += `<div class=\"vanilla-calendar-day__popup\">${dayInfo.html}</div>`;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default createPopup;\n","import { IVanillaCalendar } from '../types';\nimport controlTime from './controlTime';\nimport transformTime24 from './transformTime24';\n\nconst createTime = (self: IVanillaCalendar) => {\n\tconst timeEl = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-time');\n\tif (!timeEl) return;\n\tconst keepingTime = self.settings.selection.time === true ? 12 : self.settings.selection.time;\n\tconst range = self.settings.selection.controlTime === 'range';\n\n\ttimeEl.innerHTML = `\n\t<div class=\"vanilla-calendar-time__content\">\n\t\t<label class=\"vanilla-calendar-time__hours\">\n\t\t\t<input type=\"text\"\n\t\t\t\tname=\"hours\"\n\t\t\t\tmaxlength=\"2\"\n\t\t\t\tvalue=\"${self.selectedHours}\"\n\t\t\t\t${range ? 'disabled' : ''}>\n\t\t</label>\n\t\t<label class=\"vanilla-calendar-time__minutes\">\n\t\t\t<input type=\"text\"\n\t\t\t\tname=\"minutes\"\n\t\t\t\tmaxlength=\"2\"\n\t\t\t\tvalue=\"${self.selectedMinutes}\"\n\t\t\t\t${range ? 'disabled' : ''}>\n\t\t</label>\n\t\t${keepingTime === 12 ? `\n\t\t<button type=\"button\"\n\t\t\tclass=\"vanilla-calendar-time__keeping\"\n\t\t\t${range ? 'disabled' : ''}>${self.selectedKeeping}</button>\n\t\t` : ''}\n\t</div>\n\t<div class=\"vanilla-calendar-time__ranges\">\n\t\t<label class=\"vanilla-calendar-time__range\">\n\t\t\t<input type=\"range\"\n\t\t\t\tname=\"hours\"\n\t\t\t\tmin=\"0\"\n\t\t\t\tmax=\"23\"\n\t\t\t\tstep=\"${self.settings.selection.stepHours}\"\n\t\t\t\tvalue=\"${self.selectedKeeping ? transformTime24(self.selectedHours, self.selectedKeeping) : self.selectedHours}\">\n\t\t</label>\n\t\t<label class=\"vanilla-calendar-time__range\">\n\t\t\t<input type=\"range\"\n\t\t\t\tname=\"minutes\"\n\t\t\t\tmin=\"0\"\n\t\t\t\tmax=\"59\"\n\t\t\t\tstep=\"${self.settings.selection.stepMinutes}\"\n\t\t\t\tvalue=\"${self.selectedMinutes}\">\n\t\t</label>\n\t</div>`;\n\n\tcontrolTime(self, keepingTime);\n};\n\nexport default createTime;\n","import { IVanillaCalendar } from '../types';\n\nconst createWeek = (self: IVanillaCalendar) => {\n\tconst weekday = [...self.locale.weekday];\n\tif (!weekday[0]) return;\n\n\tconst weekEl = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-week');\n\tconst templateWeekDayEl = document.createElement('b');\n\ttemplateWeekDayEl.className = 'vanilla-calendar-week__day';\n\n\tif (self.settings.iso8601) weekday.push((weekday.shift() as string));\n\n\tif (weekEl instanceof HTMLElement) {\n\t\tweekEl.innerHTML = '';\n\n\t\tfor (let i = 0; i < weekday.length; i++) {\n\t\t\tconst weekDayName = weekday[i];\n\t\t\tconst weekDayEl = templateWeekDayEl.cloneNode(true);\n\n\t\t\tif (weekDayEl instanceof HTMLElement) {\n\t\t\t\tif (self.settings.visibility.weekend && self.settings.iso8601) {\n\t\t\t\t\tif (i === 5 || i === 6) {\n\t\t\t\t\t\tweekDayEl.classList.add('vanilla-calendar-week__day_weekend');\n\t\t\t\t\t}\n\t\t\t\t} else if (self.settings.visibility.weekend && !self.settings.iso8601) {\n\t\t\t\t\tif (i === 0 || i === 6) {\n\t\t\t\t\t\tweekDayEl.classList.add('vanilla-calendar-week__day_weekend');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tweekDayEl.innerText = `${weekDayName}`;\n\t\t\t\tweekEl.append(weekDayEl);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default createWeek;\n","import { IVanillaCalendar } from '../types';\nimport getWeekNumber from './getWeekNumber';\n\nconst createWeekNumbers = (self: IVanillaCalendar, firstDayWeek: number, daysSelectedMonth: number) => {\n\tif (!self.settings.visibility.weekNumbers) return;\n\tconst weekNumbersEl = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-week-numbers');\n\tconst daysBtnEl: NodeListOf<HTMLElement> = (self.HTMLElement as HTMLElement).querySelectorAll('.vanilla-calendar-day__btn');\n\n\tif (weekNumbersEl instanceof HTMLElement) {\n\t\tconst countWeek = Math.ceil((firstDayWeek + daysSelectedMonth) / 7);\n\t\tconst templateWeekNumberEl = document.createElement('span');\n\t\ttemplateWeekNumberEl.className = 'vanilla-calendar-week-number';\n\n\t\tweekNumbersEl.innerHTML = '';\n\n\t\tfor (let i = 0; i < countWeek; i++) {\n\t\t\tconst weekNumber = getWeekNumber(daysBtnEl[i * 7].dataset.calendarDay);\n\t\t\tif (!weekNumber) return;\n\n\t\t\tconst weekNumberEl = templateWeekNumberEl.cloneNode(true);\n\t\t\tif (weekNumberEl instanceof HTMLElement) {\n\t\t\t\tweekNumberEl.innerText = `${weekNumber.week}`;\n\t\t\t\tweekNumberEl.dataset.calendarYearWeek = `${weekNumber.year}`;\n\t\t\t\tweekNumbersEl.append(weekNumberEl);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default createWeekNumbers;\n","import { IVanillaCalendar } from '../types';\nimport controlArrows from './controlArrows';\nimport createDOM from './createDOM';\nimport createHeader from './createHeader';\n\nconst createYears = (self: IVanillaCalendar) => {\n\tif (self.viewYear === undefined || !self.dateMin || !self.dateMax) return;\n\tself.currentType = 'year';\n\tcreateDOM(self);\n\tcreateHeader(self);\n\tcontrolArrows(self);\n\t// console.log(self)\n\n\tconst yearsEl = (self.HTMLElement as HTMLElement).querySelector('.vanilla-calendar-years');\n\tif (!yearsEl) return;\n\tif (self.settings.selection.year) (yearsEl as HTMLElement).classList.add('vanilla-calendar-years_selecting');\n\tconst templateYearEl = document.createElement('button');\n\ttemplateYearEl.type = 'button';\n\ttemplateYearEl.className = 'vanilla-calendar-years__year';\n\n\tself.viewYear = self.viewYear - 0;\n\tself.selectedYear = self.selectedYear - 0;\n\n\tfor (let i = self.viewYear - 7 ; i < self.viewYear + 8; i++) {\n\t\tconst year = i;\n\t\tconst yearEl = templateYearEl.cloneNode(true);\n\n\t\tif (yearEl instanceof HTMLElement) {\n\t\t\tif (year === self.selectedYear) {\n\t\t\t\tyearEl.classList.add('vanilla-calendar-years__year_selected');\n\t\t\t}\n\t\t\tif (year < self.dateMin.getUTCFullYear()) {\n\t\t\t\tyearEl.classList.add('vanilla-calendar-years__year_disabled');\n\t\t\t\tyearEl.tabIndex = -1;\n\t\t\t}\n\t\t\tif (year > self.dateMax.getUTCFullYear()) {\n\t\t\t\tyearEl.classList.add('vanilla-calendar-years__year_disabled');\n\t\t\t\tyearEl.tabIndex = -1;\n\t\t\t}\n\n\t\t\tyearEl.dataset.calendarYear = String(year);\n\t\t\tyearEl.innerText = `${year}`;\n\t\t\tyearsEl.append(yearEl);\n\t\t}\n\t}\n};\n\nexport default createYears;\n","const generateDate = (date: Date) => {\n\tconst year = date.getUTCFullYear();\n\tlet month: number | string = date.getUTCMonth() + 1;\n\tlet day: number | string = date.getUTCDate();\n\n\tmonth = month < 10 ? `0${month}` : month;\n\tday = day < 10 ? `0${day}` : day;\n\n\treturn `${year}-${month}-${day}`;\n};\n\nexport default generateDate;\n","import { IVanillaCalendar } from '../types';\n\nconst getLocale = (self: IVanillaCalendar) => {\n\tif (self.settings.lang === 'define') return;\n\n\tself.locale.weekday = [];\n\tfor (let i = 0; i < 7; i++) {\n\t\tlet weekday = new Date(0, 0, i).toLocaleString(self.settings.lang, { weekday: 'short' });\n\t\tweekday = `${weekday.charAt(0).toUpperCase()}${weekday.substring(1, weekday.length)}`;\n\t\tweekday = weekday.replace(/\\./, '');\n\t\t(self.locale.weekday as string[]).push(weekday);\n\t}\n\n\tself.locale.months = [];\n\tfor (let i = 0; i < 12; i++) {\n\t\tlet month = new Date(0, i).toLocaleString(self.settings.lang, { month: 'long' });\n\t\tmonth = `${month.charAt(0).toUpperCase()}${month.substring(1, month.length)}`;\n\t\tmonth = month.replace(/\\./, '');\n\t\t(self.locale.months as string[]).push(month);\n\t}\n};\n\nexport default getLocale;\n","const getWeekNumber = (date: string | undefined) => {\n\tif (!date) return null;\n\tconst day = new Date(date).getUTCDate();\n\tconst month = new Date(date).getUTCMonth();\n\tconst year = new Date(date).getUTCFullYear();\n\tconst correctDate = new Date(year, month, day);\n\tconst yearStart = new Date(Date.UTC(correctDate.getUTCFullYear(), 0, 1));\n\tconst weekNumber = Math.ceil(((((+correctDate) - (+yearStart)) / 86400000) + 1) / 7);\n\n\treturn {\n\t\tyear: correctDate.getUTCFullYear(),\n\t\tweek: weekNumber,\n\t};\n};\n\nexport default getWeekNumber;\n","import updateCalendar from './updateCalendar';\nimport clickCalendar from './clickCalendar';\nimport { IVanillaCalendar } from '../types';\n\nconst initCalendar = (self: IVanillaCalendar) => {\n\tif (!self.HTMLElement) return;\n\tupdateCalendar(self);\n\tclickCalendar(self);\n};\n\nexport default initCalendar;\n","import { IVanillaCalendar } from '../types';\nimport transformTime12 from './transformTime12';\n\nconst setVariablesDates = (self: IVanillaCalendar) => {\n\tif (self.settings.selected.dates !== null) {\n\t\tself.selectedDates = self.settings.selected.dates;\n\t} else {\n\t\tself.selectedDates = [];\n\t}\n\n\tif (self.settings.selected.month !== null && self.settings.selected.month >= 0 && self.settings.selected.month < 12) {\n\t\tself.selectedMonth = self.settings.selected.month;\n\t} else {\n\t\tself.selectedMonth = self.date.today.getMonth();\n\t}\n\n\tif (self.settings.selected.year !== null && self.settings.selected.year >= 0 && self.settings.selected.year <= 9999) {\n\t\tself.selectedYear = self.settings.selected.year - 0 ;\n\t} else {\n\t\tself.selectedYear = self.date.today.getFullYear() - 0;\n\t}\n\n\tself.viewYear = self.selectedYear;\n\tself.dateMin = self.settings.visibility.disabled ? new Date(self.date.min) : new Date(self.settings.range.min);\n\tself.dateMax = self.settings.visibility.disabled ? new Date(self.date.max) : new Date(self.settings.range.max);\n\n\tconst time12 = self.settings.selection.time === true || self.settings.selection.time === 12;\n\tif (time12 || self.settings.selection.time === 24) {\n\t\tif (typeof self.settings.selected.time === 'string') {\n\t\t\tconst regExr = time12 ? /^([0-9]|0[1-9]|1[0-2]):([0-5][0-9])|(AM|PM)/g\n\t\t\t\t: /^([0-1]?[0-9]|2[0-3]):([0-5][0-9])/g;\n\n\t\t\tself.settings.selected.time.replace(regExr, (_, p1: string, p2: string, p3: string) => {\n\t\t\t\tif (p1 && p2) {\n\t\t\t\t\tself.userTime = true;\n\t\t\t\t\tself.selectedHours = p1;\n\t\t\t\t\tself.selectedMinutes = p2;\n\t\t\t\t}\n\t\t\t\tif (p3 && time12) {\n\t\t\t\t\tself.selectedKeeping = p3;\n\t\t\t\t} else if (time12) {\n\t\t\t\t\tself.selectedKeeping = 'AM';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t});\n\t\t}\n\n\t\tif (!self.userTime && (time12)) {\n\t\t\tself.selectedHours = transformTime12(String(self.date.today.getHours()));\n\t\t\tself.selectedMinutes = String(self.date.today.getMinutes());\n\t\t\tself.selectedKeeping = Number(self.date.today.getHours()) > 12 ? 'PM' : 'AM';\n\t\t} else if (!self.userTime) {\n\t\t\tself.selectedHours = String(self.date.today.getHours());\n\t\t\tself.selectedMinutes = String(self.date.today.getMinutes());\n\t\t}\n\n\t\tself.selectedHours = Number(self.selectedHours) < 10 ? `0${Number(self.selectedHours)}` : `${self.selectedHours}`;\n\t\tself.selectedMinutes = Number(self.selectedMinutes) < 10 ? `0${Number(self.selectedMinutes)}` : `${self.selectedMinutes}`;\n\t\tself.selectedTime = `${self.selectedHours}:${self.selectedMinutes}${self.selectedKeeping ? ` ${self.selectedKeeping}` : ''}`;\n\t} else if (self.settings.selection.time) {\n\t\tself.settings.selection.time = false;\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('The value of the time property can be: false, true, 12 or 24.');\n\t}\n};\n\nexport default setVariablesDates;\n","const transformTime12 = (hour: string | undefined) => {\n\tconst oldHour = Number(hour);\n\tlet newHour = String(oldHour);\n\n\tif (oldHour === 0) {\n\t\tnewHour = '12';\n\t} else if (oldHour === 13) {\n\t\tnewHour = '01';\n\t} else if (oldHour === 14) {\n\t\tnewHour = '02';\n\t} else if (oldHour === 15) {\n\t\tnewHour = '03';\n\t} else if (oldHour === 16) {\n\t\tnewHour = '04';\n\t} else if (oldHour === 17) {\n\t\tnewHour = '05';\n\t} else if (oldHour === 18) {\n\t\tnewHour = '06';\n\t} else if (oldHour === 19) {\n\t\tnewHour = '07';\n\t} else if (oldHour === 20) {\n\t\tnewHour = '08';\n\t} else if (oldHour === 21) {\n\t\tnewHour = '09';\n\t} else if (oldHour === 22) {\n\t\tnewHour = '10';\n\t} else if (oldHour === 23) {\n\t\tnewHour = '11';\n\t}\n\treturn newHour;\n};\n\nexport default transformTime12;\n","const transformTime24 = (hour: string | undefined, keeping: string | null) => {\n\tconst oldHour = Number(hour);\n\tlet newHour = String(oldHour);\n\n\tif (keeping === 'AM') {\n\t\tif (oldHour === 12) {\n\t\t\tnewHour = '00';\n\t\t}\n\t} else if (keeping === 'PM') {\n\t\tif (oldHour === 1) {\n\t\t\tnewHour = '13';\n\t\t} else if (oldHour === 2) {\n\t\t\tnewHour = '14';\n\t\t} else if (oldHour === 3) {\n\t\t\tnewHour = '15';\n\t\t} else if (oldHour === 4) {\n\t\t\tnewHour = '16';\n\t\t} else if (oldHour === 5) {\n\t\t\tnewHour = '17';\n\t\t} else if (oldHour === 6) {\n\t\t\tnewHour = '18';\n\t\t} else if (oldHour === 7) {\n\t\t\tnewHour = '19';\n\t\t} else if (oldHour === 8) {\n\t\t\tnewHour = '20';\n\t\t} else if (oldHour === 9) {\n\t\t\tnewHour = '21';\n\t\t} else if (oldHour === 10) {\n\t\t\tnewHour = '22';\n\t\t} else if (oldHour === 11) {\n\t\t\tnewHour = '23';\n\t\t}\n\t}\n\treturn newHour;\n};\n\nexport default transformTime24;\n","import { IVanillaCalendar } from '../types';\nimport controlArrows from './controlArrows';\nimport createDays from './createDays';\nimport createDOM from './createDOM';\nimport createHeader from './createHeader';\nimport createMonths from './createMonths';\nimport createTime from './createTime';\nimport createWeek from './createWeek';\nimport createYears from './createYears';\nimport getLocale from './getLocale';\nimport setVariablesDates from './setVariablesDates';\n\nconst update = (self: IVanillaCalendar) => {\n\tsetVariablesDates(self);\n\tgetLocale(self);\n\tcreateDOM(self);\n\tcreateHeader(self);\n\tcontrolArrows(self);\n\tcreateTime(self);\n\n\tif (self.currentType === 'default') {\n\t\tcreateWeek(self);\n\t\tcreateDays(self);\n\t} else if (self.currentType === 'month') {\n\t\tcreateMonths(self);\n\t} else if (self.currentType === 'year') {\n\t\tcreateYears(self);\n\t}\n};\n\nexport default update;\n","import { IOptions, IVanillaCalendar } from './types';\nimport initCalendar from './methods/initCalendar';\n\nexport default class VanillaCalendar implements IVanillaCalendar {\n\tHTMLElement: HTMLElement | null;\n\n\ttype!: string;\n\n\tdate!: {\n\t\tmin: string;\n\t\tmax: string;\n\t\ttoday: Date;\n\t};\n\n\tsettings!: {\n\t\tlang: string;\n\t\tiso8601: boolean;\n\t\trange: {\n\t\t\tmin: string;\n\t\t\tmax: string;\n\t\t\tdisabled: string[] | null;\n\t\t\tenabled: string[] | null;\n\t\t};\n\t\tselection: {\n\t\t\tday: string;\n\t\t\tmonth: boolean;\n\t\t\tyear: boolean;\n\t\t\ttime: boolean | number;\n\t\t\tcontrolTime: string;\n\t\t\tstepHours: number;\n\t\t\tstepMinutes: number;\n\t\t};\n\t\tselected: {\n\t\t\tdates: string[] | undefined | null;\n\t\t\tmonth: number | null;\n\t\t\tyear: number | null;\n\t\t\tholidays: string[] | null;\n\t\t\ttime: string | null;\n\t\t};\n\t\tvisibility: {\n\t\t\ttemplateHeader: string;\n\t\t\tmonthShort: boolean;\n\t\t\tweekNumbers: boolean;\n\t\t\tweekend: boolean;\n\t\t\ttoday: boolean;\n\t\t\tdisabled: boolean;\n\t\t};\n\t};\n\n\tlocale!: {\n\t\tmonths: string[] | [];\n\t\tweekday: string[] | [];\n\t};\n\n\tactions!: {\n\t\tclickDay: (e: MouseEvent, dates: string[] | undefined) => void;\n\t\tclickMonth: (e: MouseEvent, month: number) => void;\n\t\tclickYear: (e: MouseEvent, year: number) => void;\n\t\tchangeTime: (e: Event, time: string, hours: string, minutes: string, keeping: string) => void;\n\t};\n\n\tpopups!: {\n\t\t[key: string]: {\n\t\t\tmodifier: string;\n\t\t\thtml: string;\n\t\t};\n\t} | null;\n\n\tcurrentType!: string;\n\n\tselectedKeeping!: null;\n\n\tuserTime!: boolean;\n\n\tconstructor(selector: string | HTMLElement, option: IOptions) {\n\t\tthis.HTMLElement = typeof selector === 'string' ? document.querySelector(selector) : selector;\n\t\tif (!this.HTMLElement) return;\n\t\tthis.type = option?.type ?? 'default';\n\t\tthis.date = {\n\t\t\tmin: option?.date?.min ?? '1970-01-01',\n\t\t\tmax: option?.date?.max ?? '2470-12-31',\n\t\t\ttoday: option?.date?.today ?? new Date(),\n\t\t};\n\t\tthis.settings = {\n\t\t\tlang: option?.settings?.lang ?? 'en',\n\t\t\tiso8601: option?.settings?.iso8601 ?? true,\n\t\t\trange: {\n\t\t\t\tmin: option?.settings?.range?.min ?? this.date.min,\n\t\t\t\tmax: option?.settings?.range?.max ?? this.date.max,\n\t\t\t\tdisabled: option?.settings?.range?.disabled ?? null,\n\t\t\t\tenabled: option?.settings?.range?.enabled ?? null,\n\t\t\t},\n\t\t\tselection: {\n\t\t\t\tday: option?.settings?.selection?.day ?? 'single',\n\t\t\t\tmonth: option?.settings?.selection?.month ?? true,\n\t\t\t\tyear: option?.settings?.selection?.year ?? true,\n\t\t\t\ttime: option?.settings?.selection?.time ?? false,\n\t\t\t\tcontrolTime: option?.settings?.selection?.controlTime ?? 'all',\n\t\t\t\tstepHours: option?.settings?.selection?.stepHours ?? 1,\n\t\t\t\tstepMinutes: option?.settings?.selection?.stepMinutes ?? 1,\n\t\t\t},\n\t\t\tselected: {\n\t\t\t\tdates: option?.settings?.selected?.dates ?? null,\n\t\t\t\tmonth: option?.settings?.selected?.month ?? null,\n\t\t\t\tyear: option?.settings?.selected?.year ?? null,\n\t\t\t\tholidays: option?.settings?.selected?.holidays ?? null,\n\t\t\t\ttime: option?.settings?.selected?.time ?? null,\n\t\t\t},\n\t\t\tvisibility: {\n\t\t\t\ttemplateHeader: option?.settings?.visibility?.templateHeader ?? '%M %Y',\n\t\t\t\tmonthShort: option?.settings?.visibility?.monthShort ?? true,\n\t\t\t\tweekNumbers: option?.settings?.visibility?.weekNumbers ?? false,\n\t\t\t\tweekend: option?.settings?.visibility?.weekend ?? true,\n\t\t\t\ttoday: option?.settings?.visibility?.today ?? true,\n\t\t\t\tdisabled: option?.settings?.visibility?.disabled ?? false,\n\t\t\t},\n\t\t};\n\t\tthis.locale = {\n\t\t\tmonths: option?.locale?.months ?? [],\n\t\t\tweekday: option?.locale?.weekday ?? [],\n\t\t};\n\t\tthis.actions = {\n\t\t\tclickDay: option?.actions?.clickDay ?? null,\n\t\t\tclickMonth: option?.actions?.clickMonth ?? null,\n\t\t\tclickYear: option?.actions?.clickYear ?? null,\n\t\t\tchangeTime: option?.actions?.changeTime ?? null,\n\t\t};\n\t\tthis.popups = option?.popups ?? null;\n\n\t\tthis.currentType = this.type;\n\t\tthis.selectedKeeping = null;\n\t\tthis.userTime = false;\n\t}\n\n\tinit = () => initCalendar(this);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { IWindow } from './scripts/types';\nimport VanillaCalendar from './scripts/vanilla-calendar';\nimport './styles/vanilla-calendar.scss';\n\n(window as IWindow).VanillaCalendar = VanillaCalendar;\nexport default VanillaCalendar;\n"],"names":[],"sourceRoot":""}