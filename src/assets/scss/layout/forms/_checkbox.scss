//
//  Layout -> chkeckcheckbox 
// --------------------------------------------------
$checkbox-size: 1.25rem;
$checkbox-h: 0.5rem;
$checkbox-w: 0.25rem;
$checkbox-border-w: .1875rem;

$checkbox-size-md: 1.5rem;
$checkbox-h-md: 0.75rem;
$checkbox-w-md: 0.5rem;

$checkbox-size-lg: 1.625rem;
$checkbox-h-lg: 0.875rem;
$checkbox-w-lg: 0.625rem;

.chk-inp {
  display: none;

  ~ .chk-lab {
    cursor: pointer;
    font-size: 1rem;
    user-select: none;
    transition: $transition;

    &:hover {
      opacity: 0.66;
    }

    .checkbox,
    a, text, span {
      @include in-bk-mid;
    }

    .checkbox {
      position: relative;
      height: $checkbox-size;
      width: $checkbox-size;
      background-color: $white;
      border: $checkbox-border-w solid $grey-200;
      border-radius: $border-radius-sm;
      margin-right: .5rem;
      transition: $transition;

      &:hover {
        border-color: lighten($secondary, 20%);
      }

      &:before,
      &:after {
        content: '';
        transition: $transition;
      }
      &:before {

        display: block;
        height: 100%;
        width: 100%;
        background-color: $secondary;
        border-radius: inherit;
        opacity: 0.08;
        transform: scale(0);
      }

      &:after {
        opacity: 0;
        height: $checkbox-h;
        width: $checkbox-w;
        border: solid $white;
        border-width: 0 $checkbox-border-w $checkbox-border-w 0;

        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
      }

      &:hover:before {
        transform: scale(1.75);
      }

      &.checkbox--md {
        height: $checkbox-size-md;
        width: $checkbox-size-md;

        &:after {
          width: $checkbox-w-md;
          height: $checkbox-h-md;
        }
      }

      &.checkbox--lg {
        height: $checkbox-size-lg;
        width: $checkbox-size-lg;

        &:after {
          width: $checkbox-w-lg;
          height: $checkbox-h-lg;
        }
      }
    }

    .t-text-wavy {
      text-underline-offset: .25rem;
      text-decoration: underline;
      text-decoration-style: wavy;
      text-decoration-color: $secondary-200;
    }
  }

  &:checked + .chk-lab .checkbox {
    background: $secondary;
    border-color: $secondary;

    &:before {
      opacity: 0;
      transform: scale(1.75);
    }

    &:after {
      opacity: 1;
    }
  }

  &:disabled + .chk-lab {
    .checkbox {
      border-color: $grey-100;
      background: $grey-200;
      cursor: not-allowed;
    }

    a, text, span {
      cursor: not-allowed;
    }
    .checkbox:hover:before {
      display: none;
    }
  }
}

.check_wrap_v1_sm {
  font-size: 0;

  .check_wrap_item {
    display: inline-block;
    vertical-align: middle;
    margin-bottom: .5rem;

    &:not(:last-of-type) {
      margin-right: .5rem;
    }
  }

  .check_input {
    display: none;

    &:checked {
      + .check_wrap-label {
        background-color: $primary;

        .check_mark {
          background-color: $primary;
          border-color: rgba(_var("white-rgb", $white), 0.66);

          &:after {
            opacity: 1;

            // background-color: $white;
         
          }
        }

        .txt {
          color: $white;
        }
      }
    }
  }

  .check_wrap-label {
    background-color: $white;
    border: solid 1px rgba($primary, 0.24);
    border-radius: 8px;
    color: darken($primary, 20%);
    cursor: pointer;
    display: inline-block;
    vertical-align: middle;
    font-size: 0;
    padding: 0.25rem .5rem;
    margin-bottom: 0;
    user-select: none;

    &.disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &:hover {
      background-color: lighten($primary, 28%);
      border-color: rgba($primary, 0.66);
      transition: .25s all ease;

      .check_mark {
        border-color: lighten($primary, 10%);
        transition: all 0.3s cubic-bezier(0.12, 0.49, 0.17, 0.87);
      }
    }

    &[aria-pressed="true"] {
      background-color: $primary;

      .check_mark {
        background-color: $primary;
        border-color: rgba(_var("white-rgb", $white), 0.66);

        &:after {
          opacity: 1;

          // background-color: $white;
       
        }
      }

      .txt {
        color: $white;
      }
    }

    .check_mark {
      display: inline-block;
      vertical-align: middle;
      background-color: $white;
      border: solid 2px lighten($primary, 0%);
      border-radius: 4px;
      margin-right: .375rem;
      width: 1rem;
      height: 1rem;
      pointer-events: none;

      &:after {
        content: '';
        display: block;
        background-color: $primary;
        width: .25rem;
        height: .5rem;
        border: solid $white;
        border-width: 0 2px 2px 0;
        opacity: 0;
        position: absolute;
        top: 45%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
        transition: all 0.3s cubic-bezier(0.12, 0.49, 0.17, 0.87);
      }
    }

    .txt {
      font-size: .8125rem;
      display: inline-block;
      vertical-align: middle;
      text-align: left;
      pointer-events: none;

      // width: calc(100% - 0.5rem - 1.375rem);
   
    }

    &.width-auto.width-auto.width-auto.width-auto {
      width: calc(100% / 2 - .5rem);
      margin-top: .5rem;

      &:nth-of-type(odd) {
        margin-right: 1rem;
      }
    }

    // &:not(:last-of-type):not(.width-auto) {
    //   margin-right: 1rem;
    // }

    &:not(.width-auto):nth-last-of-type(2):first-of-type,
    &:not(.width-auto):nth-last-of-type(2):first-of-type ~ .check_wrap-label {
      width: calc(100% / 2 - .5rem);
    }

    &:not(.width-auto):nth-last-of-type(3):first-of-type,
    &:not(.width-auto):nth-last-of-type(3):first-of-type ~ .check_wrap-label {
      width: calc(100% / 3 - .666rem);
    }

    &:not(.width-auto):nth-last-of-type(4):first-of-type,
    &:not(.width-auto):nth-last-of-type(4):first-of-type ~ .check_wrap-label {
      width: calc(100% / 4 - .75rem);
    }

    &:not(.width-auto):nth-last-of-type(5):first-of-type,
    &:not(.width-auto):nth-last-of-type(5):first-of-type ~ .check_wrap-label {
      width: calc(100% / 5 - .8rem);
    }

    &:not(.width-auto):nth-last-of-type(6):first-of-type,
    &:not(.width-auto):nth-last-of-type(6):first-of-type ~ .check_wrap-label {
      width: calc(100% / 6 - .83333333rem);
    }
  }
}