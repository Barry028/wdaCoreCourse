@charset "utf-8";

//  Mixins > Text 3d
// –––––––––––––––––––––––––––––––––––––––––––––––––––––––––
@function makelongshadow($color) {
  $val: 0px 0px $color;
  @for $i from 1 through 20 {
    $color2: lighten($color, $i * 0.8);
    $val: #{$val}, #{$i}px #{$i}px #{$color2};
  }
  @return $val;
}

$LIGHTING_FLOOR: 1;
$LIGHTING_CEIL: 2;
$LIGHTING_FLAT: 3;

// @include text3d(
//   adjust-color($primarycolour, $lightness: -8%), 
//   $depth: 8, 
//   $primaryshadowcolour: adjust-color($primarycolour, $lightness: -10%, $saturation: +20%),
//   $shadowopacity: .3);
@mixin text-3d($color: $primary, $depth: 5, $shadowsteps: 5, $shadowincrementer: 0.1875rem, $shadowopacity: 0.5, $colorShadow: $dark, $lighting: $LIGHTING_CEIL) {
  $predefinedShadows: 0 0 4px rgba($colorShadow, 0.04), 0 -1px 3px rgba($colorShadow, 0.18), 0 4px 6px rgba($colorShadow, 0.18);

  $value: ();

  @for $i from 1 through $depth {
    $num: $i + px;
    $hueadjust: $i;

    @if $lighting == $LIGHTING_FLOOR {
      $hueadjust: ($i * 2 - $depth - 5) * 1%;
    }
    @else if $lighting == $LIGHTING_CEIL {
      $hueadjust: -($i * 2 + $depth - 10) * 1%;
    }
    @else if $lighting == $LIGHTING_FLAT {
      $hueadjust: -$depth * 1%;
    }

    $colour: adjust-color($color, $lightness: $hueadjust);
    $theShadow: 0 $num 0 $colour;
    $value: append($value, $theShadow, comma);
  }

  @for $i from 1 through $shadowsteps {
    @if $i >= length($predefinedShadows) {
      $dist: $i * $shadowincrementer;
      $value: append($value, 0 $dist $dist rgba($colorShadow, $shadowopacity));
    }
    @else {
      $value: append($value, nth($predefinedShadows, $i));
    }
  }

  text-shadow: $value;
}



@mixin text-3d-v2($color, $size) {
    font-weight:900;
  text-shadow: 
    0px #{$size} 0px $color,
    0px #{$size*2} 0px shade-color($color ,10%),
    0px #{$size*3} 0px shade-color($color ,20%),
    0px #{$size*4} 0px shade-color($color ,30%),
    0px #{$size*4} 0px shade-color($color ,40%),
    0px #{$size*4} 0px shade-color($color ,50%),
    0px #{$size*4} 0px shade-color($color ,60%)
}


@mixin long-shadow($color) {
  text-shadow: makelongshadow($color);
}

// .long-shadow {
//   font-size: 4rem;
//   line-height: 1.2em;
//   font-weight: 900;
//   margin: 10rem auto 0;
//   text-transform: uppercase;
//   @include long-shadow(#b9b9b9);
// }

// text-shadow 
// rgb(230, 173, 51) -2.88px -2.88px 0px, 
// rgb(244, 219, 164) -4.8px -4.8px 0px, 
// rgb(159, 115, 20) -0.96px -0.96px 0px

// @mixin text-3d($size: 1px, $shadow: $primary , $through: 6) {
//     font-weight: 700;
//     @for $i from 1 through $through {
//       $num: $i * $size;
//       $theShadow: 0 $num $shadow;
//       $value: append($value, $theShadow, comma);
//     }
//     text-shadow: $value;
//   text-shadow: 
//     0 1px 0 hsl(0, 0%, 80%), 
//     0 2px 0 hsl(0, 0%, 75%),
//     0 3px 0 hsl(0, 0%, 70%), 
//     0 4px 0 hsl(0, 0%, 65%), 
//     0 5px 0 hsl(0, 0%, 60%),
//     0 6px 0 hsl(0, 0%, 55%),

//     0 7px 1px hsla(0, 0%, 0%, 20%),

//     0 0 5px hsla(0, 0%, 0%, 10%), 
//     0 1px 3px hsla(0, 0%, 0%, 30%),
//     0 3px 5px hsla(0, 0%, 0%, 20%), 
//     0 5px 10px hsla(0, 0%, 0%, 25%),
//     0 10px 10px hsla(0, 0%, 0%, 20%), 
//     0 25px 25px hsla(0, 0%, 0%, 15%);
// }