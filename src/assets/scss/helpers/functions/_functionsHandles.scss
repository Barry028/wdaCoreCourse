@charset "utf-8";

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

@function getMode() {
  @if variable-exists(mode) {
    @return $mode;
  }
  @else {
    @return default;
  }
}

@function isDarkMode() {
  @if getMode() == dark {
    @return true;
  }
  @else {
    @return false;
  }
}

@function isDefaultMode() {
  @if getMode() == default {
    @return true;
  }
  @else {
    @return false;
  }
}

@function valueif($check, $trueValue, $falseValue: null) {
  @if $check {
    @return $trueValue;
  }
  @else if $falseValue != null {
    @return $falseValue;
  }
  @else {
    @return null;
  }
}

// @include cssvars((
//   button-height: 40px,
//   button-color: #ffffff,
//   button-background: #000000,
// ));
// height: cssvar(button-height);
@function varGet($properties, $var) {
  @return map-get($properties, $var);
}

// --#{$key}: #{$value};
@function get($map, $keys...) {
  @if length($keys) == 1 {
    $keys: nth($keys, 1);
  }

  @if type-of($map) != "map" or $map == null {
    //@return false;
  }

  $warn: "#{nth($keys, 1)}";
  $length: length($keys);
  $get: map-get($map, nth($keys, 1));

  @if $length > 1 {
    @for $i from 2 through $length {
      @if $get != null and type-of($get) == "map" {
        $warn: $warn + "->#{nth($keys, $i)}";
        $get: map-get($get, nth($keys, $i));

        @if $get == null {
          @return null;
        }
      }
      @else {
        @return get-warning($warn, $get, nth($keys, $i));
      }
    }
  }

  @return $get;
}

@function has($map, $keys...) {
  @if length($keys) == 1 {
    $keys: nth($keys, 1);
  }

  @if type-of($map) != "map" or $map == null {
    //@return false;
  }

  $warn: "#{nth($keys, 1)}";
  $length: length($keys);
  $get: map-get($map, nth($keys, 1));

  @if $length > 1 {
    @for $i from 2 through $length {
      @if $get != null and type-of($get) == "map" {
        $warn: $warn + "->#{nth($keys, $i)}";
        $get: map-get($get, nth($keys, $i));

        @if $get == null {
          @return false;
        }
      }
      @else {
        @return false;
      }
    }
  }

  @if $get != null {
    @return true;
  }
  @else {
    @return false;
  }
}

@function get-warning($warn, $get, $key) {
  @if $get == null {
    @warn "Map has no value for key search `#{$warn}`";
  }
  @else if type-of($get) != "map" {
    @warn "Non-map value found for key search `#{$warn}`, cannot search for key `#{$key}`";
  }

  @return null;
}