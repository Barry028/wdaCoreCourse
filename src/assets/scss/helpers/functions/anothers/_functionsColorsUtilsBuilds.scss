// // main overwrite to make it all work
// @function get-color-from-palette($palette, $hue: default, $opacity: null) {
//   @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {
//     @return get-color-from-palette($palette, default, $hue);
//   }

//   $color: map-get($palette, $hue);

//   @if type-of($color) == color {
//     $alpha: if($opacity == null, alpha($color), if($opacity != 1, $opacity, alpha($color)));

//     @return rgba(red($color), green($color), blue($color), $alpha);
//   }

//   // at this point we have a variable
//   // strip out color functions so we can return proper rgba value
//   $color: _tu-css-strip-variable($color);

//   // contrast color variables are defined as rgba
//   @if str-index($color, "-contrast-") {
//     @return rgba($color);
//   }

//   // non contrast variables are defined as rgb, so add alpha
//   @return rgba($color, if($opacity == null, 1, $opacity));
// }

// // apply additional overwrites
// @mixin tu-css-other-overwrites {
//   @include _tu-date-picker-content-overwrites;
//   @include _tu-checkbox-overwrites;
//   @include _tu-slide-toggle-color-overwrites;
// }

// // Fix issue with date picker contrast and hover colors
// // Account for primary, accent, and warn palettes.
// @mixin _tu-date-picker-content-overwrites {
//   .tu-datepicker-content {
//     $accent: $tu-css-palette-accent;
//     $primary: $tu-css-palette-primary;
//     $warn: $tu-css-palette-warn;

//     @include _tu-date-picker-color-overwrites($primary, 500);

//     &.tu-accent {
//       @include _tu-date-picker-color-overwrites($accent, 500);
//     }

//     &.tu-warn {
//       @include _tu-date-picker-color-overwrites($warn, 500);
//     }
//   }
// }

// @mixin _tu-date-picker-color-overwrites($palette, $hue) {
//   .tu-calendar-body-in-range::before {
//     background: get-color-from-palette($palette, $hue, 0.2);

//     @include tu-css-dark-theme-global {
//       background: get-color-from-palette($palette, $hue, 0.2);
//     }
//   }

//   .tu-calendar-body-cell:not(.tu-calendar-body-disabled):hover,
//   .cdk-keyboard-focused .tu-calendar-body-active,
//   .cdk-program-focused .tu-calendar-body-active {
//     & > .tu-calendar-body-cell-content {
//       &:not(.tu-calendar-body-selected):not(.tu-calendar-body-comparison-identical) {
//         background-color: get-color-from-palette($palette, $hue, 0.3);

//         @include tu-css-dark-theme-global {
//           background-color: get-color-from-palette($palette, $hue, 0.3);
//         }
//       }
//     }
//   }
// }

// // Fix a problem where the foreground color for the checkmark doesn't reflect
// // the correct contrast color.
// @mixin _tu-checkbox-overwrites {
//   // -- Primary Color
//   .tu-checkbox.tu-primary,
//   .tu-checkbox.tu-primary {
//     .tu-checkbox-checkmark .tu-checkbox-checkmark-path {
//       stroke: tu-css-contrast-color-primary(500) !important;
//     }

//     .tu-checkbox-mixedmark {
//       background-color: tu-css-contrast-color-primary(500) !important;
//     }
//   }

//   // -- Accent Color
//   .tu-checkbox.tu-accent,
//   .tu-checkbox.tu-accent {
//     .tu-checkbox-checkmark .tu-checkbox-checkmark-path {
//       stroke: tu-css-contrast-color-accent(500) !important;
//     }

//     .tu-checkbox-mixedmark {
//       background-color: tu-css-contrast-color-accent(500) !important;
//     }
//   }

//   // -- Warning Color
//   .tu-checkbox.tu-warn,
//   .tu-checkbox.tu-warn {
//     .tu-checkbox-checkmark .tu-checkbox-checkmark-path {
//       stroke: tu-css-contrast-color-warn(500) !important;
//     }

//     .tu-checkbox-mixedmark {
//       background-color: tu-css-contrast-color-warn(500) !important;
//     }
//   }
// }

// // Since we cannot override angulars namespace,
// // target the style and overwrite it with the proper attributes.
// @mixin _tu-slide-toggle-color-overwrites {
//   $thumb-checked-hue: 500;
//   $accent: $tu-css-palette-accent;
//   $primary: $tu-css-palette-primary;
//   $warn: $tu-css-palette-warn;

//   .tu-slide-toggle {
//     @include _tu-slide-toggle-checked-color-theme($accent, $thumb-checked-hue);

//     &.tu-primary {
//       @include _tu-slide-toggle-checked-color-theme($primary, $thumb-checked-hue);
//     }

//     &.tu-warn {
//       @include _tu-slide-toggle-checked-color-theme($warn, $thumb-checked-hue);
//     }
//   }
// }

// @mixin _tu-slide-toggle-checked-color-theme($palette, $thumb-checked-hue) {
//   @include tu-css-dark-theme-global {
//     @include _tu-slide-toggle-checked-color($palette, $thumb-checked-hue);
//   }


//   @include tu-css-light-theme-global {
//     @include _tu-slide-toggle-checked-color($palette, $thumb-checked-hue);
//   }
// }

// @mixin _tu-slide-toggle-checked-color($palette, $thumb-checked-hue) {
//   &.tu-checked {
//     .tu-slide-toggle-thumb {
//       background-color: get-color-from-palette($palette, $thumb-checked-hue);
//     }

//     .tu-slide-toggle-bar {
//       background-color: get-color-from-palette($palette, $thumb-checked-hue, 0.54);
//     }

//     .tu-ripple-element {
//       background-color: get-color-from-palette($palette, $thumb-checked-hue);
//     }
//   }
// }