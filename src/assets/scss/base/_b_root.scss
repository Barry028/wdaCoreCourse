@charset "utf-8";

/** 
//  Helpers > Root
// ––––––––––––––––––––––––––––––––––––––––––––––––––––––––– */

$darkClass: "js_dark__mode" !default;
$darkMode: true !default;
$properties: (
  "default": var(--tu-default), 
  "body-color": var(--tu-dark), 
  "body-bg": var(--tu-white));

@mixin darkMode($darkMode: true) {
  @if $darkMode {
    @media (prefers-color-scheme: dark) {
      @content;
    }
  }
  @else {
    @media (prefers-color-scheme: light) {
      @content;
    }
  }
}

@mixin themeMode {
  @each $theme, $map in $themes {
    @if $theme == "dark" {
      @include darkMode($darkMode: true) {
        #{&}[data-theme="dark"]:root {
          @each $key, $value in $map {
            --#{$variable-prefix}#{$key}: #{$value};
          }

          @content;
        }
      }
    }
    @else {
      #{&}:root {
        @each $key, $value in $map {
          --#{$variable-prefix}#{$key}: #{$value};
        }

        @content;
      }
    }
  }
}

@include themeMode {
  @each $key, $value in $properties {
    --#{$key}: #{$value};
  }
}


:root {
  // @each $color,
  // $value in $theme-colors {
  //   --#{$variable-prefix}#{$color}: #{$value};
  // }
  // 
  @each $color, $value in $greys {
    --#{$variable-prefix}grey-#{$color}: #{$value};
  }

  @each $color, $value in $grays {
    --#{$variable-prefix}gray-#{$color}: #{$value};
  }

  @each $color, $value in $neutrals {
    --#{$variable-prefix}neutral-#{$color}: #{$value};
  }
  ////////////////////////////////////////////////////////////////////////////////
  @each $color, $value in $primarys {
    --#{$variable-prefix}primary-#{$color}: #{$value};
  }

  @each $color, $value in $secondarys {
    --#{$variable-prefix}secondary-#{$color}: #{$value};
  }

  @each $color, $value in $tertiarys {
    --#{$variable-prefix}tertiary-#{$color}: #{$value};
  }

  @each $color, $value in $quaternarys {
    --#{$variable-prefix}quaternary-#{$color}: #{$value};
  }

  @each $color, $value in $successs {
    --#{$variable-prefix}success-#{$color}: #{$value};
  }

  @each $color, $value in $dangers {
    --#{$variable-prefix}danger-#{$color}: #{$value};
  }

  @each $color, $value in $warnings {
    --#{$variable-prefix}warning-#{$color}: #{$value};
  }

  @each $color, $value in $infos {
    --#{$variable-prefix}info-#{$color}: #{$value};
  }
  
  ////////////////////////////////////////////////////////////////////////////////
  @each $color, $value in $theme-colors-rgb {
    --#{$variable-prefix}#{$color}-rgb: #{$value};
  }

  --#{$variable-prefix}body-color-rgb: #{to-rgb($body-color)};
  --#{$variable-prefix}body-bg-rgb: #{to-rgb($body-bg)};
  --#{$variable-prefix}gradient: linear-gradient(45deg, rgba(#{to-rgb($white)}, 0.24), rgba(#{to-rgb($white)}, 0));

  // // Fonts

  // // Note: Use `inspect` for lists so that quoted items keep the quotes.
  // // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
  // --#{$variable-prefix}font-sans-serif: #{inspect($font-family-sans-serif)};

  // --#{$variable-prefix}font-monospace: #{inspect($font-family-monospace)};
  // --#{$variable-prefix}gradient: #{$gradient};

  // // Root and body
  // // stylelint-disable custom-property-empty-line-before
  // // scss-docs-start root-body-variables
  // @if $font-size-root != null {
  //   --#{$variable-prefix}root-font-size: #{$font-size-root};
  // }
  // --#{$variable-prefix}body-font-family: #{$font-family-base};
  // --#{$variable-prefix}body-font-size: #{$font-size-base};
  // --#{$variable-prefix}body-font-weight: #{$font-weight-base};
  // --#{$variable-prefix}body-line-height: #{$line-height-base};
  // --#{$variable-prefix}body-color: #{$body-color};
  // @if $body-text-align != null {
  //   --#{$variable-prefix}body-text-align: #{$body-text-align};
  // }
  // --#{$variable-prefix}body-bg: #{$body-bg};
  // // scss-docs-end root-body-variables
  // // stylelint-enable custom-property-empty-line-before
}